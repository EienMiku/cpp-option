name: option CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  gcc-bench:
    runs-on: ubuntu-latest
    container:
      image: gcc:15
    env:
      XMAKE_ROOT: y
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      
      - name: Install dependencies and xmake
        run: |
          apt-get update
          apt-get install -y wget curl unzip git python3 python3-pip
          gcc --version
          g++ --version
          # Install xmake manually
          curl -fsSL https://xmake.io/shget.text | bash
          source ~/.xmake/profile
          xmake --version

      - name: Build and run unit test & benchmark (GCC)
        run: |
          source ~/.xmake/profile
          xmake config --mode=release
          xmake f --toolchain=gcc --file=xmake.ci.gcc.lua --yes
          xmake --yes --file=xmake.ci.gcc.lua
          xmake run test_unit_gcc
          xmake run bench_gcc
          xmake run bench_debug_opt_gcc

      - name: List build outputs
        run: |
          find build -name "*gcc*" -type f || true
          ls -la build/ || true

      - name: Upload GCC artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gcc-binaries
          path: |
            build/linux/*/release/bench_debug_opt_gcc.sym
            build/linux/*/release/bench_debug_opt_gcc
            build/linux/*/release/bench_gcc
            build/linux/*/release/test_unit_gcc
          if-no-files-found: warn

  clang-bench:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Clang 20 and libc++
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 20
          sudo apt-get install -y libc++-20-dev libc++abi-20-dev

      - name: Install xmake
        uses: xmake-io/github-action-setup-xmake@v1

      - name: Build and run unit test & benchmark (Clang/libc++)
        run: |
          xmake config --mode=release
          xmake f --toolchain=clang-20 --file=xmake.ci.clang.lua --yes
          xmake --yes --file=xmake.ci.clang.lua
          xmake run test_unit_clang
          xmake run bench_clang
          xmake run bench_debug_opt_clang

      - name: List build outputs
        run: |
          find build -name "*clang*" -type f || true
          ls -la build/ || true

      - name: Upload Clang artifacts
        uses: actions/upload-artifact@v4
        with:
          name: clang-binaries
          path: |
            build/linux/*/release/bench_debug_opt_clang.sym
            build/linux/*/release/bench_debug_opt_clang
            build/linux/*/release/bench_clang
            build/linux/*/release/test_unit_clang
          if-no-files-found: warn

  # it seems that msvc does not support the ftm of deducing this while cppreference says it is supported
  # msvc-bench:
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Install xmake
  #       uses: xmake-io/github-action-setup-xmake@v1
  #     - name: Build and run unit test & benchmark (MSVC)
  #       run: |
  #         xmake require --yes gtest benchmark
  #         xmake f --toolchain=msvc --file=xmake.ci.windows.lua
  #         xmake --yes --file=xmake.ci.windows.lua
  #         xmake run test_unit_msvc
  #         xmake run bench_msvc